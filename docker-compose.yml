version: '3.8'

services:
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      retries: 5

  redis:
    image: redis:7.4.1-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 10

  celery_worker:
    build: .
    command: celery -A earthquake_app worker --loglevel=INFO
    volumes:
      - .:/code
    depends_on:
      - redis
      - db
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - START_TYPE=WORKER
    env_file:
      - ./.env

  frontend_builder:
    image: node:alpine
    working_dir: /code/frontend
    volumes:
      - .:/code
    command: sh -c "npm install && npm run build"
    depends_on:
      - db
      - redis
      - celery_worker

  web:
    build: .
    command: >
        sh -c "python manage.py collectstatic --noinput &&
              uvicorn earthquake_app.asgi:application --host 0.0.0.0 --port 8000"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - celery_worker
      - frontend_builder
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - START_TYPE=WEB
    env_file:
      - ./.env

volumes:
  postgres_data:
  redis_data:
